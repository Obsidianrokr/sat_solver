/**
 * Created by vladimir on 1/6/15.
 */


import java.text.SimpleDateFormat
import java.util.Calendar

import scala.util.Random
import java.io._

object DimacsGenerator {
  def GenerateInstance(numOfTerms : Int, maxWeight : Int, clauseRatio : Float) : String = {
    val inst : StringBuilder = new StringBuilder()
    val numOfClauses : Int = (numOfTerms * clauseRatio).toInt
    inst.append("c This Formula is generated by Vladimir Emelianov\n")
    inst.append("c every term has weight\n")
    inst.append("p cnf %d %d %d\n".format(numOfTerms, numOfClauses, maxWeight))
    val weights = (1 to numOfTerms).map(x=> Random.nextInt(maxWeight-1) + 1)
    inst.append("w " + weights.mkString(" ") + " 0\n")
    def generateNeg = if (Random.nextBoolean()) "-" else ""
    def get3Term = Random shuffle (1 to numOfTerms) take 3 map (generateNeg + _)
    val terms = (1 to numOfClauses) map (i=> get3Term.mkString(" ") + " 0") mkString "\n"
    inst.append(terms + "\n")
    inst.append("%\n").append("0")
    inst.toString()
  }

  def GenerateInstanceFiles(folderPath: String, instNum: Int, numOfTerms: Int, clauseRatio: Float, maxWeight: Int): Unit = {
    val format = new SimpleDateFormat("HH-mm")
    val dirName = folderPath + "/" + "uf" + numOfTerms + "t_" + clauseRatio + "c_" + maxWeight +  "w(time)" + format.format(Calendar.getInstance.getTime)
    new File(dirName) mkdir
    val filePaths = (1 to instNum).map(fileNum=> dirName + "/" + "uf" + numOfTerms + "_0" + fileNum + ".cnf")
    filePaths.foreach(path => {
      val pw = new PrintWriter(new File(path))
      try pw.write(GenerateInstance(numOfTerms, maxWeight, clauseRatio)) finally pw.close()
    })
  }
}